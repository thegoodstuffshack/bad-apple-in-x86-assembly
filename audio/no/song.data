;; SONG DATA
; bits 0-2 -> note playtime		upto 8 
; bits 3-7 -> note Hz			upto 32
; where value is offset from 1st value

bar01: db \
	0b01000000,\
	0b01011010,\
	0b01000000,\
	0b01011010,\
	0b01000000,\
	0b01011010,\
	0b00000000,\
	0b00000000,\
	0b00000000,\
	0b00000000,\
	255

bar02: db \
	0b01000000,\
	0b01011010,\
	0b01000000,\
	0b01011010,\
	0b01000000,\
	0b01011010,\
	0b00000000,\
	0b00011010,\
	0b00000000,\
	0b00011010,\
	255
	
bar03: db \
	0b01000000,\
	0b01011010,\
	0b01000000,\
	0b01011010,\
	0b01000000,\
	0b01011010,\
	0b00000000,\
	0b00011010,\
	0b00011010,\
	0b00011010,\
	255

bar04: db \
	0b01000110,\
	0b00000110,\
	0b01010010,\
	0b00010010,\
	0b00010000,\
	0b00010010,\
	0b01000110,\
	0b00000110,\
	0b01010010,\
	0b00010010,\
	0b00010000,\
	0b00010010,\
	255
	
bar05: db \
	0b01000110,\
	0b00000110,\
	0b01010010,\
	0b00010010,\
	0b00010000,\
	0b00010010,\
	0b01000110,\
	0b00010010,\
	0b00010110,\
	0b01001010,\
	0b00010110,\
	0b00011000,\
	255
	
bar06: db \
	0b01000110,\
	0b00000110,\
	0b01010010,\
	0b00010010,\
	0b00010000,\
	0b00010010,\
	0b01011000,\
	0b00010110,\
	0b00011000,\
	0b01010110,\
	0b00010010,\
	0b00010110,\
	255
; 24 22 24 22 18 22
; this bar needs correction
bar07: db \
	0b01000110,\
	0b00000110,\
	0b01010010,\
	0b00010010,\
	0b00010000,\
	0b00010010,\
	0b00111000,\
	0b00110110,\
	0b00111000,\
	0b00110110,\
	0b00110010,\
	0b00110110,\
	255

bar08: db \
	0b01000110,\
	0b01001000,\
	0b01001010,\
	0b01001100,\
	0b01101110,\
	0b01010010,\
	0b01010000,\
	255

bar09: db \
	0b01101110,\
	0b01100110,\
	0b01001110,\
	0b01001100,\
	0b01001010,\
	0b01001000,\
	255
	
bar10: db \
	0b01000110,\
	0b01001000,\
	0b01001010,\
	0b01001100,\
	0b01101110,\
	0b01001100,\
	0b01001010,\
	255

; this bar needs correction
bar11: db \
	0b01001000,\
	0b01000110,\
	0b01001000,\
	0b01001010,\
	0b01001000,\
	0b01000110,\
	0b01000100,\
	0b01001000,\
	255

bar12: db \
	0b01100100,\
	0b01100110,\
	0b01101100,\
	0b01101110,\
	255

bar13: db \
	0b01010000,\
	0b01010010,\
	0b01001110,\
	0b01001100,\
	0b01101110,\
	0b01001100,\
	0b01001110,\
	255

bar14: db \
	0b01001100,\
	0b01001010,\
	0b01001000,\
	0b01000010,\
	0b01100110,\
	0b01000010,\
	0b01000110,\
	255

bar15: db \
	0b01001000,\
	0b01001010,\
	0b01001100,\
	0b01001110,\
	0b01100110,\
	0b01001110,\
	0b01010000,\
	255

bar16: db \
	0b01010000,\
	0b01010010,\
	0b01001110,\
	0b01001100,\
	0b01101110,\
	0b01010010,\
	0b01010100,\
	255
	
bar17: db \
	0b01010110,\
	0b01010100,\
	0b01010010,\
	0b01010000,\
	0b01101110,\
	0b01001100,\
	0b01001110,\
	255

bar18: db \
	0b01001100,\
	0b01001010,\
	0b01001000,\
	0b01000010,\
	0b01100110,\
	0b01001110,\
	0b01010000,\
	255

bar19: db \
	0b01001100,\
	0b01001010,\
	0b01001000,\
	0b01000010,\
	0b01101110,\
	0b01101100,\
	255

;generate pointers to bars	; could compress
bar_addresses: dw \
	bar01,\
	bar02,\
	bar03,\
	bar04,\
	bar05,\
	bar06,\
	bar07,\
	bar08,\
	bar09,\
	bar10,\
	bar11,\
	bar12,\
	bar13,\
	bar14,\
	bar15,\
	bar16,\
	bar17,\
	bar18,\
	bar19

; offset of bar address	; could compress to nibbles
song: db \
	0,\
	1,\
	0,\
	1,\
	0,\
	1,\
	0,\
	2,\
	\
	3,\
	4,\
	3,\
	5,\
	3,\
	4,\
	3,\
	6,\
	\
	7,\
	8,\
	9,\
	10,\
	7,\
	8,\
	9,\
	11,\
	7,\
	8,\
	9,\
	10,\
	7,\
	8,\
	9,\
	11,\
	\
	7,\
	8,\
	9,\
	10,\
	7,\
	8,\
	9,\
	10,\
	7,\
	8,\
	9,\
	10,\
	7,\
	8,\
	9,\
	11,\
	\
	12,\
	12,\
	13,\
	14,\
	12,\
	12,\
	13,\
	14,\
	12,\
	12,\
	13,\
	14,\
	12,\
	16,\
	17,\
	18,\
	\
	12,\
	12,\
	13,\
	14,\
	12,\
	12,\
	13,\
	14,\
	12,\
	12,\
	13,\
	14,\
	12,\
	16,\
	17,\
	18
;; end -> add coda later